{"version":3,"sources":["components/Card.js","components/Cards.js","components/Header.js","components/Icon-button.js","components/Info.js","components/Star.js","components/Checkbox.js","components/morningCards.js","components/SettingsMorningCards.js","components/Settings.js","components/Star-icon.js","components/Winner.js","App.js","index.js"],"names":["Card","props","superlativ","randomWord","Math","floor","random","length","className","onClick","src","alt","title","Cards","newMorningCards","map","card","image","id","Header","isMorning","name","IconButton","width","height","Info","style","href","Star","star","starDisplay","Checkbox","type","onChange","handleCheckbox","value","checked","htmlFor","morningCards","SettingsMorningCards","Settings","checkedCheckboxes","stars","deleteStars","handleSettingsModal","handleSave","StarIcon","Winner","animationDelay","handleWinnerModal","App","isMobile","useMediaQuery","query","useEffect","handleNewCards","getLocalKidsRoutine","useState","isInfoOpen","setIsInfoOpen","isStarOpen","setIsStarOpen","isSettingsOpen","setIsSettingsOpen","isWinnerOpen","setIsWinnerOpen","handleInfoModal","prevValue","handleStarsModal","setCheckedCheckboxes","hour","Date","getHours","setIsMorning","inputValue","setInputValue","setName","flippedCards","setFlippedCards","earnedStars","setEarnedStars","getRandomNumber","number","console","log","setTimeout","setNewMorningCards","alert","newMorningTasks","filter","includes","nameStorage","cardsStorage","starsStorage","localStorage","getItem","setItem","JSON","stringify","NameFromLocal","parse","StarsFromLocal","CardsFromLocal","event","target","classList","contains","add","position","top","left","push","newCardsArray","splice","indexOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b3f4b87.chunk.js","sourcesContent":["const Card = (props) => {\n  const superlativ = [\n    \"Bra!\",\n    \"Fantastiskt\",\n    \"Heja!\",\n    \"Wow\",\n    \"Snyggt\",\n    \"Du är bäst\",\n    \"Fint!\",\n    \"Toppen!\",\n  ];\n\n  const number = Math.floor(Math.random() * superlativ.length);\n\n  const randomWord = superlativ[number];\n\n  return (\n    <div className=\"card\" onClick={props.onClick}>\n      <div className=\"card-inner\">\n        <div className=\"card-front\">\n          <img src={props.src} alt={props.alt} className=\"icon\" />\n          <h3>{props.title}</h3>\n        </div>\n        <div className=\"card-back\">\n          <img src=\"images/star.png\" alt=\"star\" className=\"icon\" />\n          <h3>{randomWord}</h3>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import Card from \"./Card.js\";\n\nconst Cards = (props) => {\n  return (\n    <div className=\"cards-container\">\n      {props.newMorningCards.map((card) => {\n        return (\n          <Card\n            onClick={props.onClick}\n            key={card.id}\n            alt={card.title}\n            src={card.image}\n            title={card.title}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n","const Header = (props) => {\n  return (\n    <header>\n      <h1>\n        God {props.isMorning ? \"morgon\" : \"kväll\"} {props.name}\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","const IconButton = (props) => {\n  return (\n    <button\n      className={`icon-button ${props.className}`}\n      id={props.id}\n      onClick={props.onClick}\n    >\n      <img src={props.src} alt={props.alt} width=\"65\" height=\"65\" />\n    </button>\n  );\n};\n\nexport default IconButton;\n","const Info = (props) => {\n  return (\n    <div className={`container ${props.className}`} style={props.style}>\n      <h2>Välkommen</h2>\n      <p>\n        Klara av alla morgon och kvällsuppgifter på ett kul och lekfullt sätt.\n        Välj vilka uppgifter som passar dig bäst och samla så många stjärnor du\n        kan. Lycka till!\n      </p>\n      <br />\n      <p>\n        Detta är ett Hyper Island skolprojekt som är utvecklat av Elin Amrén,\n        mer information hittar du på{\" \"}\n        <a href=\"https://github.com/elinamren/goodmorning\">Github</a>.\n      </p>\n      <br />\n      <h4>CRED</h4>\n      <p>\n        Iconer designade av{\" \"}\n        <a href=\"https://www.freepik.com\" title=\"Freepik\">\n          Freepik\n        </a>{\" \"}\n        från{\" \"}\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n          Flaticon\n        </a>\n      </p>\n      <br />\n      <button onClick={props.onClick}>Stäng</button>\n    </div>\n  );\n};\n\nexport default Info;\n","const Star = (props) => {\n  return (\n    <div className={`container ${props.className}`}>\n      <h2>Stjärnor</h2>\n      <p>\n        Bra jobbat {props.name}, du har samlat {props.star} stjärnor.\n      </p>\n      <div className=\"star-board\">{props.starDisplay}</div>\n      <br />\n      <button onClick={props.onClick}>Tillbaka</button>\n    </div>\n  );\n};\n\nexport default Star;\n","const Checkbox = (props) => {\n  return (\n    <div>\n      <input\n        className=\"checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        onChange={props.handleCheckbox}\n        value={props.name}\n        checked={props.checked}\n        id={props.id}\n      />\n      <label htmlFor={props.name}>{props.name}</label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","const morningCards = [\n  {\n    id: \"1\",\n    title: \"Gå upp i tid\",\n    image: \"images/sleep.png\",\n  },\n  {\n    id: \"2\",\n    title: \"Gå på toa\",\n    image: \"images/toilet.png\",\n  },\n  {\n    id: \"3\",\n    title: \"Klä på dig\",\n    image: \"images/clothes.png\",\n  },\n  {\n    id: \"4\",\n    title: \"Ät frukost\",\n    image: \"images/breakfast.png\",\n  },\n  {\n    id: \"5\",\n    title: \"Duka av bordet\",\n    image: \"images/dish.png\",\n  },\n  {\n    id: \"6\",\n    title: \"Borsta tänder\",\n    image: \"images/toothbrush.png\",\n  },\n  {\n    id: \"7\",\n    title: \"Borsta håret\",\n    image: \"images/hair-brush.png\",\n  },\n  {\n    id: \"8\",\n    title: \"Bädda sängen\",\n    image: \"images/bed.png\",\n  },\n  {\n    id: \"9\",\n    title: \"Packa väskan\",\n    image: \"images/backpack.png\",\n  },\n  {\n    id: \"10\",\n    title: \"Klä på ytterkläder\",\n    image: \"images/shoes.png\",\n  },\n];\n\nexport default morningCards;\n","import Checkbox from \"./Checkbox\";\nimport morningCards from \"./morningCards\";\n\nconst SettingsMorningCards = (props) => {\n  // const [isChecked, setIsChecked] = useState(false);\n  // if (props.checkedCheckboxes.includes(card.title)) {\n  //   setIsChecked(true);\n  // }\n  return (\n    // loopa igenom, om namnet finns  i listan checked\n    <>\n      <h4>Välj morgonuppgifter, 6st.</h4>\n      {morningCards.map((card) => {\n        return (\n          <Checkbox\n            name={card.title}\n            handleCheckbox={props.handleCheckbox}\n            key={card.id}\n            id={card.id}\n            // checked={props.checkedCheckboxes.includes(card.id) ? true : false}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default SettingsMorningCards;\n","import SettingsMorningCards from \"./SettingsMorningCards\";\nconst Settings = (props) => {\n  return (\n    <div className={`container settings ${props.className}`}>\n      <h2>Inställningar</h2>\n      <p>Här kan du ändra namn, vilka uppgifter som ska synas osv.</p>\n      <div className=\"input-container\">\n        <br />\n        <label htmlFor=\"name\">Namn: </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={props.onChange}\n          // value={props.value}\n        />\n        <br />\n        <br />\n        <SettingsMorningCards\n          handleCheckbox={props.handleCheckbox}\n          checkedCheckboxes={props.checkedCheckboxes}\n        />\n\n        <br />\n        <br />\n        <p>\n          Du har {props.stars} insamlade stjärnor. Vill du börja om från noll?\n        </p>\n        <button className=\"small-button\" onClick={props.deleteStars}>\n          Ja\n        </button>\n      </div>\n\n      <button onClick={props.handleSettingsModal}>Tillbaka</button>\n      <button onClick={props.handleSave}>Spara</button>\n    </div>\n  );\n};\n\nexport default Settings;\n","const StarIcon = (props) => {\n  return (\n    <img\n      src=\"images/star.png\"\n      alt=\"star\"\n      width=\"50\"\n      height=\"50\"\n      className=\"star-blink\"\n      style={props.style}\n    />\n  );\n};\n\nexport default StarIcon;\n","import StarIcon from \"./Star-icon\";\n\nconst Winner = (props) => {\n  return (\n    <div className={`container ${props.className}`}>\n      <h2>Bra jobbat {props.name}!</h2>\n      <StarIcon />\n      <StarIcon style={{ animationDelay: \"0.2s\" }} />\n      <StarIcon style={{ animationDelay: \"1.4s\" }} />\n      <StarIcon />\n      <StarIcon style={{ animationDelay: \"0.5s\" }} />\n      <StarIcon style={{ animationDelay: \"1s\" }} />\n      <p>\n        Du Har hittils samlat ihop {props.star} stjärnor. Du har klarat alla\n        uppgifter som finns just nu. Kom tillbaka igen i{\" \"}\n        {props.isMorning ? \"kväll\" : \"morgon\"}.\n      </p>\n      <button onClick={props.handleWinnerModal}>TEST MODE</button>\n    </div>\n  );\n};\n\nexport default Winner;\n","import \"./App.css\";\nimport Cards from \"./components/Cards\";\nimport Header from \"./components/Header.js\";\nimport IconButton from \"./components/Icon-button\";\nimport Info from \"./components/Info\";\nimport { useEffect, useState } from \"react\";\nimport Star from \"./components/Star\";\nimport Settings from \"./components/Settings\";\nimport Winner from \"./components/Winner\";\nimport morningCards from \"./components/morningCards\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction App() {\n  const isMobile = useMediaQuery({ query: \"(max-width: 650px)\" });\n\n  useEffect(() => {\n    handleNewCards();\n    getLocalKidsRoutine();\n    // eslint-disable-next-line\n  }, []);\n\n  // MODALS\n  const [isInfoOpen, setIsInfoOpen] = useState(false);\n  const [isStarOpen, setIsStarOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isWinnerOpen, setIsWinnerOpen] = useState(false);\n\n  function handleWinnerModal() {\n    setIsWinnerOpen((prevValue) => {\n      return !prevValue;\n    });\n  }\n  function handleInfoModal() {\n    setIsInfoOpen((prevValue) => {\n      return !prevValue;\n    });\n  }\n  function handleStarsModal() {\n    setIsStarOpen((prevValue) => {\n      return !prevValue;\n    });\n  }\n  function handleSettingsModal() {\n    setCheckedCheckboxes([]);\n    setIsSettingsOpen((prevValue) => {\n      return !prevValue;\n    });\n  }\n\n  // THEME --- morning/night\n  const hour = new Date().getHours();\n\n  const [isMorning, setIsMorning] = useState(false);\n\n  useEffect(() => {\n    if (hour > 15) {\n      setIsMorning(true);\n    } else {\n      setIsMorning(false);\n    }\n  }, [hour]);\n\n  // NAME\n  const [inputValue, setInputValue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  function handleInputValue(event) {\n    setInputValue(event.target.value);\n  }\n  function handleName() {\n    setName(inputValue);\n  }\n\n  // FLIP CARDS & COUNT STARS\n  const [flippedCards, setFlippedCards] = useState(0);\n  const [earnedStars, setEarnedStars] = useState([]);\n\n  useEffect(() => {\n    if (flippedCards === 6) {\n      console.log(\"Winner\");\n      setTimeout(() => {\n        setIsWinnerOpen(true);\n      }, 1700);\n    }\n  }, [flippedCards]);\n  function countStars(event) {\n    if (!event.target.classList.contains(\"flipped\")) {\n      setEarnedStars((prevValue) => [...prevValue, prevValue.length + 1]);\n      event.target.classList.add(\"flipped\");\n      setFlippedCards((prevValue) => prevValue + 1);\n      console.log(flippedCards);\n    }\n  }\n\n  // DELETE ALL STARS\n  function deleteStars() {\n    setEarnedStars([]);\n  }\n\n  function getRandomNumber(number) {\n    return Math.floor(Math.random() * number + 1);\n  }\n\n  // Pick tasks  settings\n  const [checkedCheckboxes, setCheckedCheckboxes] = useState([\n    \"2\",\n    \"3\",\n    \"4\",\n    \"6\",\n    \"9\",\n    \"10\",\n  ]);\n\n  function handleCheckbox(event) {\n    if (event.target.checked) {\n      checkedCheckboxes.push(event.target.id);\n    } else if (!event.target.checked) {\n      const newCardsArray = checkedCheckboxes.splice(\n        checkedCheckboxes.indexOf(event.target.id),\n        1\n      );\n      setCheckedCheckboxes(newCardsArray);\n    }\n    console.log(checkedCheckboxes);\n  }\n\n  const [newMorningCards, setNewMorningCards] = useState([]);\n\n  function handleNewCards() {\n    if (checkedCheckboxes.length > 6 || checkedCheckboxes.length < 6) {\n      alert(\"Du får välja 6 olika uppgifter\");\n    } else if (checkedCheckboxes.length === 6) {\n      const newMorningTasks = morningCards.filter((card) =>\n        checkedCheckboxes.includes(card.id)\n      );\n      setNewMorningCards(newMorningTasks);\n    }\n    console.log(newMorningCards);\n  }\n\n  function handleSave() {\n    handleName();\n    handleNewCards();\n    if (checkedCheckboxes.length === 6) {\n      setIsSettingsOpen(false);\n    }\n  }\n  // -------------------\n\n  //SAVE TO LOCAL STORAGE\n\n  const nameStorage = \"KidsRoutineNameLocalStorage\";\n  const cardsStorage = \"KidsRoutineCardsLocalStorage\";\n  const starsStorage = \"KidsRoutineStarsLocalStorage\";\n\n  const saveLocalItems = () => {\n    localStorage.setItem(nameStorage, JSON.stringify(name));\n    localStorage.setItem(cardsStorage, JSON.stringify(newMorningCards));\n    localStorage.setItem(starsStorage, JSON.stringify(earnedStars));\n  };\n\n  const getLocalKidsRoutine = () => {\n    if (localStorage.getItem(nameStorage) === null) {\n      localStorage.setItem(nameStorage, JSON.stringify(\"\"));\n    } else {\n      let NameFromLocal = JSON.parse(localStorage.getItem(nameStorage));\n      setName(NameFromLocal);\n    }\n    if (localStorage.getItem(starsStorage) === null) {\n      localStorage.setItem(starsStorage, JSON.stringify([]));\n    } else {\n      let StarsFromLocal = JSON.parse(localStorage.getItem(starsStorage));\n      setEarnedStars(StarsFromLocal);\n    }\n    if (localStorage.getItem(cardsStorage) === null) {\n      localStorage.setItem(cardsStorage, JSON.stringify(newMorningCards));\n    } else {\n      let CardsFromLocal = JSON.parse(localStorage.getItem(cardsStorage));\n      setNewMorningCards(CardsFromLocal);\n    }\n  };\n\n  useEffect(() => {\n    saveLocalItems();\n    // eslint-disable-next-line\n  }, [name, earnedStars, newMorningCards]);\n\n  return (\n    <div className=\"App\">\n      <Header name={name} isMorning={isMorning} />\n      <Cards onClick={countStars} newMorningCards={newMorningCards} />\n      <IconButton\n        src=\"images/info.png\"\n        alt=\"info\"\n        id=\"info-button\"\n        onClick={handleInfoModal}\n      />\n      <IconButton\n        src=\"images/settings.png\"\n        alt=\"settings\"\n        id=\"settings-button\"\n        onClick={handleSettingsModal}\n      />\n      <IconButton\n        src=\"images/star.png\"\n        alt=\"star\"\n        id=\"star-button\"\n        onClick={handleStarsModal}\n      />\n      <Info\n        onClick={handleInfoModal}\n        className={isInfoOpen ? \"fade-in\" : \"fade-out\"}\n      />\n      <Star\n        onClick={handleStarsModal}\n        className={isStarOpen ? \"fade-in\" : \"fade-out\"}\n        name={name}\n        star={earnedStars.length}\n        starDisplay={earnedStars.map((star) => (\n          <img\n            className=\"star-blink\"\n            src=\"images/star.png\"\n            alt=\"star\"\n            width=\"50\"\n            height=\"50\"\n            key={star}\n            style={{\n              position: \"absolute\",\n              top: isMobile ? getRandomNumber(290) : getRandomNumber(290),\n              left: isMobile ? getRandomNumber(230) : getRandomNumber(870),\n              animationDelay: getRandomNumber(5) + \"s\",\n            }}\n          />\n        ))}\n      />\n      <Settings\n        handleSettingsModal={handleSettingsModal}\n        className={isSettingsOpen ? \"fade-in\" : \"fade-out\"}\n        onChange={handleInputValue}\n        handleSave={handleSave}\n        deleteStars={deleteStars}\n        handleCheckbox={handleCheckbox}\n        value={name}\n        stars={earnedStars.length}\n        checkedCheckboxes={checkedCheckboxes}\n      />\n      <Winner\n        name={name}\n        star={earnedStars.length}\n        handleWinnerModal={handleWinnerModal}\n        className={isWinnerOpen ? \"fade-in\" : \"fade-out\"}\n        isMorning={isMorning}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}