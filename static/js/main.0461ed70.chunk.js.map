{"version":3,"sources":["components/Card.js","components/Cards.js","components/Header.js","components/Icon-button.js","components/Info.js","components/Star.js","components/Checkbox.js","components/morningCards.js","components/SettingsMorningCards.js","components/Settings.js","components/Star-icon.js","components/Winner.js","App.js","index.js"],"names":["Card","props","superlativ","randomWord","Math","floor","random","length","className","onClick","src","alt","title","Cards","newMorningCards","map","card","image","id","Header","name","IconButton","width","height","Info","style","href","Star","star","starDisplay","Checkbox","type","onChange","handleCheckbox","value","checked","htmlFor","morningCards","SettingsMorningCards","Settings","stars","deleteStars","handleSettingsModal","handleSave","StarIcon","Winner","hour","Date","getHours","useState","theme","setTheme","useEffect","animationDelay","handleWinnerModal","App","isMobile","useMediaQuery","query","handleNewCards","getLocalKidsRoutine","isInfoOpen","setIsInfoOpen","isStarOpen","setIsStarOpen","isSettingsOpen","setIsSettingsOpen","isWinnerOpen","setIsWinnerOpen","handleInfoModal","prevValue","handleStarsModal","setCheckedCheckboxes","inputValue","setInputValue","setName","flippedCards","setFlippedCards","earnedStars","setEarnedStars","getRandomNumber","number","console","log","checkedCheckboxes","setNewMorningCards","alert","newMorningTasks","filter","includes","localStorage","getItem","setItem","JSON","stringify","NameFromLocal","parse","StarsFromLocal","defaultCards","CardsFromLocal","event","target","classList","contains","add","display","position","top","left","push","newCardsArray","splice","indexOf","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0461ed70.chunk.js","sourcesContent":["const Card = (props) => {\n  const superlativ = [\n    \"Bra!\",\n    \"Fantastiskt\",\n    \"Heja!\",\n    \"Wow\",\n    \"Snyggt\",\n    \"Du är bäst\",\n    \"Fint!\",\n    \"Toppen!\",\n  ];\n\n  const number = Math.floor(Math.random() * superlativ.length);\n  const randomWord = superlativ[number];\n\n  return (\n    <div className=\"card\" onClick={props.onClick}>\n      <div className=\"card-inner\">\n        <div className=\"card-front\">\n          <img src={props.src} alt={props.alt} className=\"icon\" />\n          <h3>{props.title}</h3>\n        </div>\n        <div className=\"card-back\">\n          <img src=\"images/star.png\" alt=\"star\" className=\"icon\" />\n          <h3>{randomWord}</h3>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import Card from \"./Card.js\";\n\nconst Cards = (props) => {\n  return (\n    <div className=\"cards-container\">\n      {props.newMorningCards.map((card) => {\n        return (\n          <Card\n            onClick={props.onClick}\n            key={card.id}\n            alt={card.title}\n            src={card.image}\n            title={card.title}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n","const Header = (props) => {\n  return (\n    <header>\n      <h1>God morgon {props.name}</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","const IconButton = (props) => {\n  return (\n    <button\n      className={`icon-button ${props.className}`}\n      id={props.id}\n      onClick={props.onClick}\n    >\n      <img src={props.src} alt={props.alt} width=\"65\" height=\"65\" />\n    </button>\n  );\n};\n\nexport default IconButton;\n","const Info = (props) => {\n  return (\n    <div className=\"container\" style={props.style}>\n      <h2>Välkommen</h2>\n      <p>\n        Klara av alla morgon och kvällsuppgifter på ett kul och lekfullt sätt.\n        Välj vilka uppgifter som passar dig bäst och samla så många stjärnor du\n        kan. Lycka till!\n      </p>\n      <br />\n      <p>\n        Detta är ett Hyper Island skolprojekt som är utvecklat av Elin Amrén,\n        mer information hittar du på{\" \"}\n        <a href=\"https://github.com/elinamren/goodmorning\">Github</a>.\n      </p>\n      <br />\n      <h4>CRED</h4>\n      <p>\n        Iconer designade av{\" \"}\n        <a href=\"https://www.freepik.com\" title=\"Freepik\">\n          Freepik\n        </a>{\" \"}\n        från{\" \"}\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n          Flaticon\n        </a>\n      </p>\n      <br />\n      <button onClick={props.onClick}>Stäng</button>\n    </div>\n  );\n};\n\nexport default Info;\n","const Star = (props) => {\n  return (\n    <div className=\"container\" style={props.style}>\n      <h2>Stjärnor</h2>\n      <p>\n        Bra jobbat {props.name}, du har samlat {props.star} stjärnor.\n      </p>\n      <div className=\"star-board\">{props.starDisplay}</div>\n      <br />\n      <button onClick={props.onClick}>Tillbaka</button>\n    </div>\n  );\n};\n\nexport default Star;\n","const Checkbox = (props) => {\n  return (\n    <div>\n      <input\n        className=\"checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        onChange={props.handleCheckbox}\n        value={props.name}\n        checked={props.checked}\n      />\n      <label htmlFor={props.name}>{props.name}</label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","const morningCards = [\n  {\n    id: \"1\",\n    title: \"Gå upp i tid\",\n    image: \"images/sleep.png\",\n  },\n  {\n    id: \"2\",\n    title: \"Gå på toa\",\n    image: \"images/toilet.png\",\n  },\n  {\n    id: \"3\",\n    title: \"Klä på dig\",\n    image: \"images/clothes.png\",\n  },\n  {\n    id: \"4\",\n    title: \"Ät frukost\",\n    image: \"images/breakfast.png\",\n  },\n  {\n    id: \"5\",\n    title: \"Duka av bordet\",\n    image: \"images/dish.png\",\n  },\n  {\n    id: \"6\",\n    title: \"Borsta tänder\",\n    image: \"images/toothbrush.png\",\n  },\n  {\n    id: \"7\",\n    title: \"Borsta håret\",\n    image: \"images/hair-brush.png\",\n  },\n  {\n    id: \"8\",\n    title: \"Bädda sängen\",\n    image: \"images/bed.png\",\n  },\n  {\n    id: \"9\",\n    title: \"Packa väskan\",\n    image: \"images/backpack.png\",\n  },\n  {\n    id: \"10\",\n    title: \"Klä på ytterkläder\",\n    image: \"images/shoes.png\",\n  },\n];\n\nexport default morningCards;\n","import Checkbox from \"./Checkbox\";\nimport morningCards from \"./morningCards\";\nimport { useState } from \"react\";\n\nconst SettingsMorningCards = (props) => {\n  // const [isChecked, setIsChecked] = useState(false);\n  // if (props.checkedCheckboxes.includes(card.title)) {\n  //   setIsChecked(true);\n  // }\n  return (\n    // loopa igenom, om namnet finns  i listan checked\n    <>\n      <h4>Välj morgonuppgifter, 6st.</h4>\n      {morningCards.map((card) => {\n        return (\n          <Checkbox name={card.title} handleCheckbox={props.handleCheckbox} />\n        );\n      })}\n    </>\n  );\n};\n\nexport default SettingsMorningCards;\n","import SettingsMorningCards from \"./SettingsMorningCards\";\nconst Settings = (props) => {\n  return (\n    <div className=\"container settings\" style={props.style}>\n      <h2>Inställningar</h2>\n      <p>Här kan du ändra namn, vilka uppgifter som ska synas osv.</p>\n      <div className=\"input-container\">\n        <br />\n        <label htmlFor=\"name\">Namn: </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={props.onChange}\n          // value={props.value}\n        />\n        <br />\n        <br />\n        <SettingsMorningCards handleCheckbox={props.handleCheckbox} />\n\n        <br />\n        <br />\n        <p>\n          Du har {props.stars} insamlade stjärnor. Vill du börja om från noll?\n        </p>\n        <button className=\"small-button\" onClick={props.deleteStars}>\n          Ja\n        </button>\n      </div>\n\n      <button onClick={props.handleSettingsModal}>Tillbaka</button>\n      <button onClick={props.handleSave}>Spara</button>\n    </div>\n  );\n};\n\nexport default Settings;\n","const StarIcon = (props) => {\n  return (\n    <img\n      src=\"images/star.png\"\n      alt=\"star\"\n      width=\"50\"\n      height=\"50\"\n      className=\"star-blink\"\n      style={props.style}\n    />\n  );\n};\n\nexport default StarIcon;\n","import { useEffect, useState } from \"react\";\nimport StarIcon from \"./Star-icon\";\n\nconst Winner = (props) => {\n  const hour = new Date().getHours();\n\n  const [theme, setTheme] = useState(\"\");\n\n  useEffect(() => {\n    if (hour > 12) {\n      setTheme(\"morgon\");\n    } else {\n      setTheme(\"kväll\");\n    }\n  }, [hour]);\n\n  return (\n    <div className=\"container\" style={props.style}>\n      <h2>Bra jobbat {props.name}!</h2>\n      <StarIcon />\n      <StarIcon style={{ animationDelay: \"0.2s\" }} />\n      <StarIcon style={{ animationDelay: \"1.4s\" }} />\n      <StarIcon />\n      <StarIcon style={{ animationDelay: \"0.5s\" }} />\n      <StarIcon style={{ animationDelay: \"1s\" }} />\n      <p>\n        Du Har hittils samlat ihop {props.star} stjärnor. Du har klarat alla\n        uppgifter som finns just nu. Kom tillbaka igen i {theme}.\n      </p>\n      <button onClick={props.handleWinnerModal}>TEST MODE</button>\n    </div>\n  );\n};\n\nexport default Winner;\n","import \"./App.css\";\nimport Cards from \"./components/Cards\";\nimport Header from \"./components/Header.js\";\nimport IconButton from \"./components/Icon-button\";\nimport Info from \"./components/Info\";\nimport { useEffect, useState } from \"react\";\nimport Star from \"./components/Star\";\nimport Settings from \"./components/Settings\";\nimport Winner from \"./components/Winner\";\nimport morningCards from \"./components/morningCards\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction App() {\n  const isMobile = useMediaQuery({ query: \"(max-width: 650px)\" });\n\n  useEffect(() => {\n    handleNewCards();\n    getLocalKidsRoutine();\n  }, []);\n\n  // MODALS\n  const [isInfoOpen, setIsInfoOpen] = useState(false);\n  const [isStarOpen, setIsStarOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isWinnerOpen, setIsWinnerOpen] = useState(false);\n\n  function handleWinnerModal() {\n    setIsWinnerOpen((prevValue) => {\n      return !prevValue;\n    });\n  }\n\n  function handleInfoModal() {\n    setIsInfoOpen((prevValue) => {\n      return !prevValue;\n    });\n  }\n  function handleStarsModal() {\n    setIsStarOpen((prevValue) => {\n      return !prevValue;\n    });\n  }\n  function handleSettingsModal() {\n    setCheckedCheckboxes([]);\n    setIsSettingsOpen((prevValue) => {\n      return !prevValue;\n    });\n  }\n\n  // NAME\n  const [inputValue, setInputValue] = useState(\"\");\n  const [name, setName] = useState(\"\");\n\n  function handleInputValue(event) {\n    setInputValue(event.target.value);\n  }\n\n  function handleName() {\n    setName(inputValue);\n  }\n\n  // FLIP CARDS & COUNT STARS\n  const [flippedCards, setFlippedCards] = useState(0);\n  const [earnedStars, setEarnedStars] = useState([]);\n\n  useEffect(() => {\n    if (flippedCards === 6) {\n      console.log(\"Winner\");\n      setIsWinnerOpen(true);\n    }\n  }, [flippedCards]);\n  function countStars(event) {\n    if (!event.target.classList.contains(\"flipped\")) {\n      setEarnedStars((prevValue) => [...prevValue, prevValue.length + 1]);\n      event.target.classList.add(\"flipped\");\n      setFlippedCards((prevValue) => prevValue + 1);\n      console.log(flippedCards);\n    }\n  }\n\n  // DELETE ALL STARS\n  function deleteStars() {\n    setEarnedStars([]);\n  }\n\n  function getRandomNumber(number) {\n    return Math.floor(Math.random() * number + 1);\n  }\n\n  // Pick tasks  settings\n\n  const [checkedCheckboxes, setCheckedCheckboxes] = useState([\n    \"Gå på toa\",\n    \"Klä på dig\",\n    \"Ät frukost\",\n    \"Borsta tänder\",\n    \"Packa väskan\",\n    \"Klä på ytterkläder\",\n  ]);\n\n  function handleCheckbox(event) {\n    if (event.target.checked) {\n      checkedCheckboxes.push(event.target.value);\n    } else if (!event.target.checked) {\n      const newCardsArray = checkedCheckboxes.splice(\n        checkedCheckboxes.indexOf(event.target.value),\n        1\n      );\n      setCheckedCheckboxes(newCardsArray);\n    }\n    console.log(checkedCheckboxes);\n  }\n\n  const [newMorningCards, setNewMorningCards] = useState([]);\n\n  function handleNewCards() {\n    if (checkedCheckboxes.length > 6 || checkedCheckboxes.length < 6) {\n      alert(\"Du får välja 6 olika uppgifter\");\n    } else if (checkedCheckboxes.length === 6) {\n      const newMorningTasks = morningCards.filter((card) =>\n        checkedCheckboxes.includes(card.title)\n      );\n      setNewMorningCards(newMorningTasks);\n    }\n    console.log(newMorningCards);\n  }\n\n  // -------------------\n\n  function handleSave() {\n    handleName();\n    handleNewCards();\n  }\n  //variabel KidsRoutineNameLocalStorage\n  //SAVE TO LOCAL STORAGE\n  const saveLocalItems = () => {\n    localStorage.setItem(\"KidsRoutineNameLocalStorage\", JSON.stringify(name));\n    localStorage.setItem(\n      \"KidsRoutineCardsLocalStorage\",\n      JSON.stringify(newMorningCards)\n    );\n    localStorage.setItem(\n      \"KidsRoutineStarsLocalStorage\",\n      JSON.stringify(earnedStars)\n    );\n  };\n\n  const getLocalKidsRoutine = () => {\n    if (localStorage.getItem(\"KidsRoutineNameLocalStorage\") === null) {\n      localStorage.setItem(\"KidsRoutineNameLocalStorage\", JSON.stringify(\"\"));\n    } else {\n      let NameFromLocal = JSON.parse(\n        localStorage.getItem(\"KidsRoutineNameLocalStorage\")\n      );\n      setName(NameFromLocal);\n    }\n    if (localStorage.getItem(\"KidsRoutineStarsLocalStorage\") === null) {\n      localStorage.setItem(\"KidsRoutineStarsLocalStorage\", JSON.stringify([]));\n    } else {\n      let StarsFromLocal = JSON.parse(\n        localStorage.getItem(\"KidsRoutineStarsLocalStorage\")\n      );\n      setEarnedStars(StarsFromLocal);\n    }\n    if (localStorage.getItem(\"KidsRoutineCardsLocalStorage\") === null) {\n      const defaultCards = morningCards.filter((card) =>\n        checkedCheckboxes.includes(card.title)\n      );\n      localStorage.setItem(\n        \"KidsRoutineCardsLocalStorage\",\n        JSON.stringify(defaultCards)\n      );\n    } else {\n      let CardsFromLocal = JSON.parse(\n        localStorage.getItem(\"KidsRoutineCardsLocalStorage\")\n      );\n      setNewMorningCards(CardsFromLocal);\n    }\n  };\n\n  useEffect(() => {\n    saveLocalItems();\n  }, [name, earnedStars, newMorningCards]);\n\n  return (\n    <div className=\"App\">\n      <Header name={name} />\n      <Cards onClick={countStars} newMorningCards={newMorningCards} />\n      <IconButton\n        src=\"images/info.png\"\n        alt=\"info\"\n        id=\"info-button\"\n        onClick={handleInfoModal}\n      />\n      <IconButton\n        src=\"images/settings.png\"\n        alt=\"settings\"\n        id=\"settings-button\"\n        onClick={handleSettingsModal}\n      />\n      <IconButton\n        src=\"images/star.png\"\n        alt=\"star\"\n        id=\"star-button\"\n        onClick={handleStarsModal}\n      />\n      <Info\n        onClick={handleInfoModal}\n        style={{ display: isInfoOpen ? \"block\" : \"none\" }}\n      />\n      <Star\n        onClick={handleStarsModal}\n        style={{ display: isStarOpen ? \"block\" : \"none\" }}\n        name={name}\n        star={earnedStars.length}\n        starDisplay={earnedStars.map((star) => (\n          <img\n            className=\"star-blink\"\n            src=\"images/star.png\"\n            alt=\"star\"\n            width=\"50\"\n            height=\"50\"\n            key={star}\n            style={{\n              position: \"absolute\",\n              top: isMobile ? getRandomNumber(290) : getRandomNumber(290),\n              left: isMobile ? getRandomNumber(230) : getRandomNumber(870),\n              animationDelay: getRandomNumber(5) + \"s\",\n            }}\n          />\n        ))}\n      />\n      <Settings\n        handleSettingsModal={handleSettingsModal}\n        style={{ display: isSettingsOpen ? \"block\" : \"none\" }}\n        onChange={handleInputValue}\n        handleSave={handleSave}\n        deleteStars={deleteStars}\n        handleCheckbox={handleCheckbox}\n        value={name}\n        stars={earnedStars.length}\n        setCheckedCheckboxes={checkedCheckboxes}\n      />\n      <Winner\n        name={name}\n        star={earnedStars.length}\n        style={{ display: isWinnerOpen ? \"block\" : \"none\" }}\n        handleWinnerModal={handleWinnerModal}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}