{"version":3,"sources":["components/Card.js","components/Cards.js","components/Header.js","components/Icon-button.js","components/Info.js","components/Star.js","components/settings/Checkbox.js","components/nightCards.js","components/settings/SettingsNightCards.js","components/morningCards.js","components/settings/SettingsMorningCards.js","components/settings/NameInput.js","components/settings/DeleteStars.js","components/settings/Settings.js","components/Star-icon.js","components/Winner.js","App.js","index.js"],"names":["Card","props","className","onClick","src","alt","title","randomWord","Cards","superlativ","useState","cards","setCards","useEffect","isMorning","newMorningCards","newNightCards","map","card","i","image","id","Header","style","color","name","IconButton","width","height","Info","href","Star","star","starDisplay","Checkbox","type","onChange","handleCheckbox","value","checked","for","nightCards","SettingsNightCards","handleCheckboxNight","checkedCheckboxesNight","includes","saveNight","morningCards","SettingsMorningCards","handleCheckboxMorning","checkedCheckboxesMorning","saveMorning","NameInput","inputValue","setInputValue","event","target","autocomplete","saveName","DeleteStars","stars","deleteStars","Settings","handleSettingsModal","StarIcon","Winner","animationDelay","App","isMobile","useMediaQuery","query","handleNewMorningCards","handleNewNightCards","getLocalKidsRoutine","winnerAudio","Audio","starAudio","isInfoOpen","setIsInfoOpen","isStarOpen","setIsStarOpen","isSettingsOpen","setIsSettingsOpen","isWinnerOpen","setIsWinnerOpen","handleInfoModal","prevValue","handleStarsModal","setIsMorning","hour","Date","getHours","setName","flippedCards","setFlippedCards","earnedStars","setEarnedStars","getRandomNumber","number","Math","floor","random","setTimeout","play","setCheckedCheckboxesMorning","setCheckedCheckboxesNight","setNewMorningCards","setNewNightCards","length","newMorningTasks","filter","alert","newNightTasks","nameStorage","starsStorage","morningCardsStorage","nightCardsStorage","checkboxMorningStorage","checkboxNightStorage","localStorage","getItem","setItem","JSON","stringify","NameFromLocal","parse","StarsFromLocal","CardsFromLocal","checkedFromLocal","backgroundImage","classList","contains","add","position","top","left","newCardsArray","nameLower","toLowerCase","nameFirstUpper","charAt","toUpperCase","slice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ee7b3dc.chunk.js","sourcesContent":["const Card = (props) => {\n  return (\n    <div className=\"card\" onClick={props.onClick}>\n      <div className=\"card-inner\">\n        <div className=\"card-front\">\n          <img src={props.src} alt={props.alt} className=\"icon\" />\n          <h2>{props.title}</h2>\n        </div>\n        <div className=\"card-back\">\n          <img src=\"images/star.png\" alt=\"star\" className=\"icon\" />\n          <h2>{props.randomWord}</h2>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import { useEffect, useState } from \"react\";\nimport Card from \"./Card.js\";\n\nconst Cards = (props) => {\n  const superlativ = [\n    \"Bra!\",\n    \"Fantastiskt\",\n    \"Heja!\",\n    \"Snyggt\",\n    \"Du är bäst\",\n    \"Toppen!\",\n  ];\n\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    if (props.isMorning) {\n      setCards(props.newMorningCards);\n    } else {\n      setCards(props.newNightCards);\n    }\n  }, [props.isMorning, props.newNightCards, props.newMorningCards]);\n  return (\n    <div className=\"cards-container\">\n      {cards.map((card, i) => {\n        return (\n          <Card\n            onClick={props.onClick}\n            key={card.id}\n            alt={card.title}\n            src={card.image}\n            title={card.title}\n            randomWord={superlativ[i]}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n","const Header = (props) => {\n  return (\n    <header>\n      <h1 style={{ color: props.isMorning ? \"black\" : \"white\" }}>\n        God {props.isMorning ? \"morgon\" : \"kväll\"} {props.name}\n      </h1>\n    </header>\n  );\n};\n\nexport default Header;\n","const IconButton = (props) => {\n  return (\n    <button\n      className={`icon-button ${props.className}`}\n      id={props.id}\n      onClick={props.onClick}\n    >\n      <img src={props.src} alt={props.alt} width=\"65\" height=\"65\" />\n    </button>\n  );\n};\n\nexport default IconButton;\n","const Info = (props) => {\n  return (\n    <div className={`modal-container ${props.className}`} style={props.style}>\n      <h2>Välkommen</h2>\n      <p>\n        Klara av alla morgon och kvällsuppgifter på ett kul och lekfullt sätt.\n        Välj vilka uppgifter som passar dig bäst och samla så många stjärnor du\n        kan. Lycka till!\n      </p>\n      <br />\n      <p>\n        Detta är ett Hyper Island skolprojekt som är utvecklat av Elin Amrén,\n        mer information hittar du på{\" \"}\n        <a href=\"https://github.com/elinamren/kids-routine\">Github</a>.\n      </p>\n      <br />\n      <h4>CRED</h4>\n      <p>\n        Iconer designade av{\" \"}\n        <a href=\"https://www.freepik.com\" title=\"Freepik\">\n          Freepik\n        </a>{\" \"}\n        från{\" \"}\n        <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n          Flaticon\n        </a>\n      </p>\n      <br />\n      <div className=\"return-button-container\">\n        <button onClick={props.onClick}>Stäng</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Info;\n","const Star = (props) => {\n  return (\n    <div className={`modal-container ${props.className}`}>\n      <h3>Stjärnor</h3>\n      <p>\n        Bra jobbat {props.name}, du har samlat {props.star} stjärnor.\n      </p>\n      <div className=\"star-board\">{props.starDisplay}</div>\n      <br />\n      <div className=\"return-button-container\">\n        <button onClick={props.onClick}>Tillbaka</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Star;\n","const Checkbox = (props) => {\n  return (\n    <div>\n      <input\n        className=\"checkbox\"\n        type=\"checkbox\"\n        name={props.name}\n        onChange={props.handleCheckbox}\n        value={props.name}\n        checked={props.checked}\n        id={props.id}\n      />\n      <label for={props.id}>{props.name}</label>\n    </div>\n  );\n};\n\nexport default Checkbox;\n","const nightCards = [\n  {\n    id: \"11\",\n    title: \"Häng upp jackan\",\n    image: \"images/jacket.png\",\n  },\n  {\n    id: \"12\",\n    title: \"Gör läxor\",\n    image: \"images/homework.png\",\n  },\n  {\n    id: \"13\",\n    title: \"Duka av bordet\",\n    image: \"images/dish.png\",\n  },\n  {\n    id: \"14\",\n    title: \"Städa leksaker\",\n    image: \"images/toys.png\",\n  },\n  {\n    id: \"15\",\n    title: \"Städa rummet\",\n    image: \"images/vacuum.png\",\n  },\n  {\n    id: \"16\",\n    title: \"Läsa\",\n    image: \"images/book.png\",\n  },\n  {\n    id: \"17\",\n    title: \"Bada\",\n    image: \"images/bath.png\",\n  },\n  {\n    id: \"18\",\n    title: \"Borsta tänder\",\n    image: \"images/toothbrush.png\",\n  },\n  {\n    id: \"19\",\n    title: \"Gå på toa\",\n    image: \"images/toilet.png\",\n  },\n  {\n    id: \"20\",\n    title: \"Klä av dig\",\n    image: \"images/clothes.png\",\n  },\n];\n\nexport default nightCards;\n","import Checkbox from \"./Checkbox\";\nimport nightCards from \"../nightCards\";\n\nconst SettingsNightCards = (props) => {\n  return (\n    <div className=\"settings-container flexbox\">\n      <div>\n        <h4>Välj kvällsuppgifter, 6st.</h4>\n        {nightCards.map((card) => {\n          return (\n            <Checkbox\n              name={card.title}\n              handleCheckbox={props.handleCheckboxNight}\n              key={card.id}\n              id={card.id}\n              checked={\n                props.checkedCheckboxesNight.includes(card.id) ? true : false\n              }\n            />\n          );\n        })}\n      </div>\n      <button className=\"small-button\" onClick={props.saveNight}>\n        Spara\n      </button>\n    </div>\n  );\n};\n\nexport default SettingsNightCards;\n","const morningCards = [\n  {\n    id: \"1\",\n    title: \"Gå upp i tid\",\n    image: \"images/sleep.png\",\n  },\n  {\n    id: \"2\",\n    title: \"Gå på toa\",\n    image: \"images/toilet.png\",\n  },\n  {\n    id: \"3\",\n    title: \"Klä på dig\",\n    image: \"images/clothes.png\",\n  },\n  {\n    id: \"4\",\n    title: \"Ät frukost\",\n    image: \"images/breakfast.png\",\n  },\n  {\n    id: \"5\",\n    title: \"Duka av bordet\",\n    image: \"images/dish.png\",\n  },\n  {\n    id: \"6\",\n    title: \"Borsta tänder\",\n    image: \"images/toothbrush.png\",\n  },\n  {\n    id: \"7\",\n    title: \"Borsta håret\",\n    image: \"images/hair-brush.png\",\n  },\n  {\n    id: \"8\",\n    title: \"Bädda sängen\",\n    image: \"images/bed.png\",\n  },\n  {\n    id: \"9\",\n    title: \"Packa väskan\",\n    image: \"images/backpack.png\",\n  },\n  {\n    id: \"10\",\n    title: \"Klä på ytterkläder\",\n    image: \"images/shoes.png\",\n  },\n];\n\nexport default morningCards;\n","import Checkbox from \"./Checkbox\";\nimport morningCards from \"../morningCards\";\n\nconst SettingsMorningCards = (props) => {\n  return (\n    // loopa igenom, om namnet finns  i listan checked\n    <div className=\"settings-container flexbox\">\n      <div>\n        <h4>Välj morgonuppgifter, 6st.</h4>\n        {morningCards.map((card) => {\n          return (\n            <Checkbox\n              name={card.title}\n              handleCheckbox={props.handleCheckboxMorning}\n              key={card.id}\n              id={card.id}\n              checked={\n                props.checkedCheckboxesMorning.includes(card.id) ? true : false\n              }\n            />\n          );\n        })}\n      </div>\n      <button className=\"small-button\" onClick={props.saveMorning}>\n        Spara\n      </button>\n    </div>\n  );\n};\n\nexport default SettingsMorningCards;\n","import { useState } from \"react\";\n\nconst NameInput = (props) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  function handleInputValue(event) {\n    setInputValue(event.target.value);\n  }\n  return (\n    <div className=\"settings-container flexbox\">\n      <div>\n        <label for=\"name-input\">Namn: </label>\n        <input\n          id=\"name-input\"\n          type=\"text\"\n          name=\"name\"\n          onChange={handleInputValue}\n          value={inputValue}\n          autocomplete=\"off\"\n        />\n      </div>\n      <button\n        className=\"small-button\"\n        onClick={() => {\n          props.saveName(inputValue);\n          setInputValue(\"\");\n        }}\n      >\n        Spara\n      </button>\n    </div>\n  );\n};\n\nexport default NameInput;\n","const DeleteStars = (props) => {\n  return (\n    <div className=\"settings-container flexbox\">\n      <p>\n        Du har {props.stars} insamlade stjärnor. <br />\n        Vill du börja om från noll?\n      </p>\n      <button className=\"small-button\" onClick={props.deleteStars}>\n        Ja\n      </button>\n    </div>\n  );\n};\n\nexport default DeleteStars;\n","import SettingsNightCards from \"./SettingsNightCards\";\nimport SettingsMorningCards from \"./SettingsMorningCards\";\nimport NameInput from \"./NameInput\";\nimport DeleteStars from \"./DeleteStars\";\nconst Settings = (props) => {\n  return (\n    <div className={`modal-container settings ${props.className}`}>\n      <h3>Inställningar</h3>\n      <p>Här kan du ändra namn, vilka uppgifter som ska synas osv.</p>\n      <div className=\"input-container\">\n        <NameInput\n          onChange={props.onChange}\n          saveName={props.saveName}\n          value={props.value}\n        />\n        <SettingsMorningCards\n          handleCheckboxMorning={props.handleCheckboxMorning}\n          checkedCheckboxesMorning={props.checkedCheckboxesMorning}\n          saveMorning={props.saveMorning}\n        />\n        <SettingsNightCards\n          handleCheckboxNight={props.handleCheckboxNight}\n          checkedCheckboxesNight={props.checkedCheckboxesNight}\n          saveNight={props.saveNight}\n        />\n        <DeleteStars stars={props.stars} deleteStars={props.deleteStars} />\n      </div>\n\n      <button onClick={props.handleSettingsModal}>Tillbaka</button>\n    </div>\n  );\n};\n\nexport default Settings;\n","const StarIcon = (props) => {\n  return (\n    <img\n      src=\"images/star.png\"\n      alt=\"star\"\n      width=\"50\"\n      height=\"50\"\n      className=\"star-blink\"\n      style={props.style}\n    />\n  );\n};\n\nexport default StarIcon;\n","import StarIcon from \"./Star-icon\";\n\nconst Winner = (props) => {\n  return (\n    <div className={`modal-container ${props.className}`}>\n      <h3>Bra jobbat {props.name}!</h3>\n      <StarIcon />\n      <StarIcon style={{ animationDelay: \"0.2s\" }} />\n      <StarIcon style={{ animationDelay: \"1.4s\" }} />\n      <StarIcon />\n      <StarIcon style={{ animationDelay: \"0.5s\" }} />\n      <StarIcon style={{ animationDelay: \"1s\" }} />\n      <p>\n        Grattis till 6 nya stjärnor. Du har hittils samlat ihop {props.star}{\" \"}\n        stjärnor. Du har klarat alla uppgifter som finns just nu, kom tillbaka\n        igen i {props.isMorning ? \"kväll\" : \"morgon\"}.\n      </p>\n    </div>\n  );\n};\n\nexport default Winner;\n","import \"./App.css\";\nimport Cards from \"./components/Cards\";\nimport Header from \"./components/Header.js\";\nimport IconButton from \"./components/Icon-button\";\nimport Info from \"./components/Info\";\nimport { useEffect, useState } from \"react\";\nimport Star from \"./components/Star\";\nimport Settings from \"./components/settings/Settings\";\nimport Winner from \"./components/Winner\";\nimport morningCards from \"./components/morningCards\";\nimport nightCards from \"./components/nightCards\";\nimport { useMediaQuery } from \"react-responsive\";\n\nfunction App() {\n  const isMobile = useMediaQuery({ query: \"(max-width: 650px)\" });\n\n  // Get the saved cards when site render\n  useEffect(() => {\n    handleNewMorningCards();\n    handleNewNightCards();\n    getLocalKidsRoutine();\n    // eslint-disable-next-line\n  }, []);\n\n  // SOUND\n  const winnerAudio = new Audio(\"sound/winner.mp3\");\n  const starAudio = new Audio(\"sound/star.mp3\");\n\n  // MODALS\n  const [isInfoOpen, setIsInfoOpen] = useState(false);\n  const [isStarOpen, setIsStarOpen] = useState(false);\n  const [isSettingsOpen, setIsSettingsOpen] = useState(false);\n  const [isWinnerOpen, setIsWinnerOpen] = useState(false);\n\n  function handleInfoModal() {\n    setIsInfoOpen((prevValue) => {\n      return !prevValue;\n    });\n  }\n  function handleStarsModal() {\n    setIsStarOpen((prevValue) => {\n      return !prevValue;\n    });\n  }\n  function handleSettingsModal() {\n    setIsSettingsOpen((prevValue) => {\n      return !prevValue;\n    });\n  }\n\n  // THEME --- morning/night\n  const [isMorning, setIsMorning] = useState(false);\n\n  const hour = new Date().getHours();\n  useEffect(() => {\n    if (hour < 15) {\n      setIsMorning(true);\n    } else {\n      setIsMorning(false);\n    }\n  }, [hour]);\n\n  useEffect(() => {\n    setIsWinnerOpen(false);\n  }, [isMorning]);\n\n  // NAME\n  const [name, setName] = useState(\"\");\n\n  function handleName(inputValue) {\n    const nameLower = inputValue.toLowerCase();\n    const nameFirstUpper =\n      nameLower.charAt(0).toUpperCase() + nameLower.slice(1);\n    setName(nameFirstUpper);\n  }\n\n  // FLIP CARDS & COUNT STARS\n  const [flippedCards, setFlippedCards] = useState(0);\n  const [earnedStars, setEarnedStars] = useState([]);\n\n  useEffect(() => {\n    if (flippedCards === 6) {\n      setTimeout(() => {\n        setIsWinnerOpen(true);\n        winnerAudio.play();\n      }, 1700);\n    }\n    // eslint-disable-next-line\n  }, [flippedCards]);\n\n  function countStars(event) {\n    if (!event.target.classList.contains(\"flipped\")) {\n      setEarnedStars((prevValue) => [...prevValue, prevValue.length + 1]);\n      event.target.classList.add(\"flipped\");\n      setFlippedCards((prevValue) => prevValue + 1);\n      starAudio.play();\n    }\n  }\n\n  // DELETE ALL STARS\n  function deleteStars() {\n    setEarnedStars([]);\n  }\n\n  function getRandomNumber(number) {\n    return Math.floor(Math.random() * number + 1);\n  }\n\n  // Pick tasks  settings\n  const [checkedCheckboxesMorning, setCheckedCheckboxesMorning] = useState([\n    \"2\",\n    \"3\",\n    \"4\",\n    \"6\",\n    \"9\",\n    \"10\",\n  ]);\n  const [checkedCheckboxesNight, setCheckedCheckboxesNight] = useState([\n    \"11\",\n    \"13\",\n    \"14\",\n    \"18\",\n    \"19\",\n    \"20\",\n  ]);\n\n  const [newMorningCards, setNewMorningCards] = useState([]);\n  const [newNightCards, setNewNightCards] = useState([]);\n\n  function handleCheckboxMorning(event) {\n    if (event.target.checked) {\n      setCheckedCheckboxesMorning((prevValue) => [\n        ...prevValue,\n        event.target.id,\n      ]);\n    } else {\n      const newCardsArray = checkedCheckboxesMorning.filter(\n        (card) => card !== event.target.id\n      );\n      setCheckedCheckboxesMorning(newCardsArray);\n    }\n  }\n\n  function handleCheckboxNight(event) {\n    if (event.target.checked) {\n      setCheckedCheckboxesNight((prevValue) => [...prevValue, event.target.id]);\n    } else {\n      const newCardsArray = checkedCheckboxesNight.filter(\n        (card) => card !== event.target.id\n      );\n      setCheckedCheckboxesNight(newCardsArray);\n    }\n  }\n\n  function handleNewMorningCards() {\n    if (checkedCheckboxesMorning.length === 6) {\n      const newMorningTasks = morningCards.filter((card) =>\n        checkedCheckboxesMorning.includes(card.id)\n      );\n      setNewMorningCards(newMorningTasks);\n    } else {\n      alert(\"Du får välja 6 olika uppgifter\");\n    }\n  }\n\n  function handleNewNightCards() {\n    if (checkedCheckboxesNight.length === 6) {\n      const newNightTasks = nightCards.filter((card) =>\n        checkedCheckboxesNight.includes(card.id)\n      );\n      setNewNightCards(newNightTasks);\n    } else {\n      alert(\"Du får välja 6 olika uppgifter\");\n    }\n  }\n\n  //SAVE TO LOCAL STORAGE\n\n  const nameStorage = \"KidsRoutineNameLocalStorage\";\n  const starsStorage = \"KidsRoutineStarsLocalStorage\";\n  const morningCardsStorage = \"KidsRoutineMorningCardsLocalStorage\";\n  const nightCardsStorage = \"KidsRoutineNightCardsLocalStorage\";\n  const checkboxMorningStorage = \"KidsRoutineCheckboxMorningLocalStorage\";\n  const checkboxNightStorage = \"KidsRoutineCheckboxNightLocalStorage\";\n\n  const saveLocalItems = () => {\n    localStorage.setItem(nameStorage, JSON.stringify(name));\n    localStorage.setItem(starsStorage, JSON.stringify(earnedStars));\n    localStorage.setItem(morningCardsStorage, JSON.stringify(newMorningCards));\n    localStorage.setItem(nightCardsStorage, JSON.stringify(newNightCards));\n    localStorage.setItem(\n      checkboxMorningStorage,\n      JSON.stringify(checkedCheckboxesMorning)\n    );\n    localStorage.setItem(\n      checkboxNightStorage,\n      JSON.stringify(checkedCheckboxesNight)\n    );\n  };\n\n  const getLocalKidsRoutine = () => {\n    if (localStorage.getItem(nameStorage) === null) {\n      localStorage.setItem(nameStorage, JSON.stringify(\"\"));\n    } else {\n      let NameFromLocal = JSON.parse(localStorage.getItem(nameStorage));\n      setName(NameFromLocal);\n    }\n    if (localStorage.getItem(starsStorage) === null) {\n      localStorage.setItem(starsStorage, JSON.stringify([]));\n    } else {\n      let StarsFromLocal = JSON.parse(localStorage.getItem(starsStorage));\n      setEarnedStars(StarsFromLocal);\n    }\n    if (localStorage.getItem(morningCardsStorage) === null) {\n      localStorage.setItem(\n        morningCardsStorage,\n        JSON.stringify(newMorningCards)\n      );\n    } else {\n      let CardsFromLocal = JSON.parse(\n        localStorage.getItem(morningCardsStorage)\n      );\n      setNewMorningCards(CardsFromLocal);\n    }\n    if (localStorage.getItem(nightCardsStorage) === null) {\n      localStorage.setItem(nightCardsStorage, JSON.stringify(newNightCards));\n    } else {\n      let CardsFromLocal = JSON.parse(localStorage.getItem(nightCardsStorage));\n      setNewNightCards(CardsFromLocal);\n    }\n\n    if (localStorage.getItem(checkboxMorningStorage) === null) {\n      localStorage.setItem(\n        checkboxMorningStorage,\n        JSON.stringify(checkedCheckboxesMorning)\n      );\n    } else {\n      let checkedFromLocal = JSON.parse(\n        localStorage.getItem(checkboxMorningStorage)\n      );\n      setCheckedCheckboxesMorning(checkedFromLocal);\n    }\n    if (localStorage.getItem(checkboxNightStorage) === null) {\n      localStorage.setItem(\n        checkboxNightStorage,\n        JSON.stringify(checkedCheckboxesNight)\n      );\n    } else {\n      let checkedFromLocal = JSON.parse(\n        localStorage.getItem(checkboxNightStorage)\n      );\n      setCheckedCheckboxesNight(checkedFromLocal);\n    }\n  };\n\n  useEffect(() => {\n    saveLocalItems();\n    // eslint-disable-next-line\n  }, [\n    name,\n    earnedStars,\n    newMorningCards,\n    newNightCards,\n    checkedCheckboxesMorning,\n    checkedCheckboxesNight,\n  ]);\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundImage: isMorning\n          ? \"linear-gradient(rgb(255, 209, 216) 50%, rgb(255, 204, 110))\"\n          : \"linear-gradient(rgb(13, 12, 79) 50%, rgb(81, 145, 219))\",\n      }}\n    >\n      <Header name={name} isMorning={isMorning} />\n      <Cards\n        onClick={countStars}\n        newMorningCards={newMorningCards}\n        newNightCards={newNightCards}\n        isMorning={isMorning}\n      />\n      <IconButton\n        src={isMorning ? \"images/info-black.png\" : \"images/info-white.png\"}\n        alt=\"info\"\n        id=\"info-button\"\n        onClick={handleInfoModal}\n      />\n      <IconButton\n        src={\n          isMorning ? \"images/settings-black.png\" : \"images/settings-white.png\"\n        }\n        alt=\"settings\"\n        id=\"settings-button\"\n        onClick={handleSettingsModal}\n      />\n      <IconButton\n        src=\"images/star.png\"\n        alt=\"star\"\n        id=\"star-button\"\n        onClick={handleStarsModal}\n      />\n      <Info\n        onClick={handleInfoModal}\n        className={isInfoOpen ? \"fade-in\" : \"fade-out\"}\n      />\n      <Star\n        onClick={handleStarsModal}\n        className={isStarOpen ? \"fade-in\" : \"fade-out\"}\n        name={name}\n        star={earnedStars.length}\n        starDisplay={earnedStars.map((star) => (\n          <img\n            className=\"star-blink\"\n            src=\"images/star.png\"\n            alt=\"star\"\n            width=\"50\"\n            height=\"50\"\n            key={star}\n            style={{\n              position: \"absolute\",\n              top: isMobile ? getRandomNumber(300) : getRandomNumber(290),\n              left: isMobile ? getRandomNumber(230) : getRandomNumber(870),\n              animationDelay: getRandomNumber(5) + \"s\",\n            }}\n          />\n        ))}\n      />\n      <Settings\n        handleSettingsModal={handleSettingsModal}\n        className={isSettingsOpen ? \"fade-in\" : \"fade-out\"}\n        deleteStars={deleteStars}\n        saveMorning={handleNewMorningCards}\n        handleCheckboxMorning={handleCheckboxMorning}\n        saveNight={handleNewNightCards}\n        handleCheckboxNight={handleCheckboxNight}\n        saveName={handleName}\n        stars={earnedStars.length}\n        checkedCheckboxesMorning={checkedCheckboxesMorning}\n        checkedCheckboxesNight={checkedCheckboxesNight}\n      />\n      <Winner\n        name={name}\n        star={earnedStars.length}\n        className={isWinnerOpen ? \"fade-in\" : \"fade-out\"}\n        isMorning={isMorning}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}